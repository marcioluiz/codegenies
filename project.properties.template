# Arquivo de Propriedades do Analista
# Dados do projeto
# title=#Título do Projeto
# description=#Descrição do projeto.
# author=#Informações dos autores do projeto.
# technical_details=#Detalhamento técnico geral do projeto. 
# backend_technology=#Descrição da tecnologia do backend do propjeto.
# frontend_technology=#Descrição da tecnologia do frontend do propjeto.
#
# Engish:
#
# Analyst Properties File
# Project data
# title=#Project Title
# description=#Description of the project.
# author=#Information about the project authors.
# technical_details=#General technical details of the project. 
# backend_technology=#Description of the project's backend technology.
# frontend_technology=#Description of the project's frontend technology.
[project]
title=Youtube Clone
description=Criar um projeto de aplicativo web, clone do youtube, que deve ser uma cópia simples do aplicativo Youtube. A aplicação clone do YouTube teria como objetivo principal oferecer uma plataforma de compartilhamento de vídeos robusta e escalável. No backend, seria desenvolvido com FastAPI, utilizando Python para criar uma API RESTful que gerencia usuários, vídeos, comentários e curtidas. O armazenamento dos vídeos seria tratado por um serviço de armazenamento em nuvem como AWS S3, integrado via boto3. Para a autenticação, seria implementado OAuth2 com JWT para garantir segurança e controle de acesso. No frontend, utilizando Next.js com React, proporcionaria uma experiência de usuário responsiva e fluída, com páginas dinâmicas para navegação entre vídeos, feeds personalizados e sugestões baseadas em preferências de visualização. Recursos adicionais incluiriam um player de vídeo personalizável, sistema de recomendações utilizando algoritmos de aprendizado de máquina e integração com APIs externas para otimização de conteúdo e análise de desempenho. No backend, o clone do YouTube usando FastAPI seria estruturado para fornecer uma ampla gama de serviços centrados em vídeos. A API RESTful seria projetada para gerenciar não apenas usuários e autenticação, mas também para lidar com o upload, armazenamento e streaming de vídeos. Utilizando bibliotecas como boto3, vídeos seriam armazenados de forma segura em serviços de nuvem como AWS S3, permitindo escalabilidade e redundância. Para o streaming de vídeo, seria implementada uma solução robusta que suporta diferentes resoluções e formatos, otimizando a entrega com base na largura de banda do usuário. A autenticação seria gerenciada usando OAuth2 com JWT para segurança e controle de acesso, garantindo que apenas usuários autorizados possam realizar ações como upload e comentários. No frontend, desenvolvido com Next.js e React, a aplicação ofereceria uma interface dinâmica e responsiva para os usuários. A página inicial seria projetada para apresentar uma variedade de vídeos em um layout moderno, com recursos de carrossel e categorização para facilitar a descoberta de conteúdo. Cada vídeo teria uma página dedicada, permitindo comentários em tempo real e integração com redes sociais para compartilhamento. O player de vídeo seria altamente personalizável, oferecendo suporte a reprodução contínua, controles de reprodução avançados e suporte a legendas. Além disso, haveria uma seção de perfil para cada usuário, onde poderiam gerenciar seus vídeos carregados, inscrições e playlists personalizadas.
 Recursos adicionais incluiriam um sistema de recomendação alimentado por algoritmos de aprendizado de máquina, que analisa o comportamento de visualização e preferências dos usuários para sugerir vídeos relevantes. APIs externas seriam integradas para otimização de conteúdo, análise de desempenho e transmissão ao vivo. A arquitetura da aplicação seria modular e escalável, preparada para lidar com um grande volume de tráfego e conteúdo de vídeo diversificado.
author=Modelos de IA: Phi 3 Medium, Codegemma 7B e Llama 3 7B.
technical_details=Projeto de App Web em duas camadas: Backend utilizando FastAPI do python em conjunto com MariaDB como banco de dados e Frontend usando NextJS do javascript. Testes unitários e de contexto de processos desenvolvidos posteriormente como complemento dos projetos.
backend_technology=linguagem de programação Python, framework FastAPI e banco de dados MariaDB. Todos em suas versões mais recentes.
frontend_technology=linguagem de programação Javascript, framework NextJS consumindo a API do FastAPI. Todos em suas versões mais recentes.